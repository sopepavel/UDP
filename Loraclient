from Crypto.Cipher import AES
import base64

def encrypt_data(key, data):
    cipher = AES.new(key, AES.MODE_ECB)
    padded_data = data + (16 - len(data) % 16) * '\0'
    encrypted_data = cipher.encrypt(padded_data)
    return base64.b64encode(encrypted_data).decode()

# Configuration LoRa
# Configurer les paramètres LoRa pour le client

# Clé de chiffrement partagée avec le serveur
shared_key = b'ma_cle_secrete123'  # Remplacez par une clé sécurisée

# Données à envoyer
data_to_send = "Données confidentielles"

# Chiffrer les données avant l'envoi
encrypted_data = encrypt_data(shared_key, data_to_send)

# Envoyer les données chiffrées au serveur LoRa
# Code pour envoyer les données via LoRa vers le serveur
